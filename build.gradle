plugins {
   id 'net.nemerosa.versioning' version '2.6.0'
}
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'


version = versioning.info.display
println "Version: ${version}"
println "Full version info: ${versioning.info}"



group = 'com.logicartisan'
archivesBaseName = 'intrepid'

repositories {
	mavenCentral()
}

dependencies {
	compile group: 'org.apache.mina', name: 'mina-core', version: '2.0.7'
	compile group: 'org.apache.mina', name: 'mina-filter-compression', version: '2.0.7'
	compile group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    compile fileTree( dir: 'lib', include: '*.jar' )

	testCompile group: 'junit', name: 'junit', version: '4.12'
	testCompile group: 'org.easymock', name: 'easymock', version: '3.4'
	testCompile group: 'org.mockito', name: 'mockito-core', version: '1.10.19'
}

test {
	systemProperty 'intrepid.lease.duration', '2000'
	systemProperty 'intrepid.lease.prune_interval', '1000'
	systemProperty 'intrepid.local_call_handler.initial_reservation', '10000'
	systemProperty 'intrepid.req_invoke_ack_rate_sec', '1'

	ignoreFailures true
}



task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives javadocJar, sourcesJar
}


signing {
	sign configurations.archives
}


javadoc {
	options.addStringOption('Xdoclint:none', '-quiet')
}



uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: sonatypeUsername, password: sonatypePassword)
			}

			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: sonatypeUsername, password: sonatypePassword)
			}

			pom.project {
				name 'Intrepid'
				packaging 'jar'
				// optionally artifactId can be defined here
				description 'A replacement for Java RMI (Remote Method Invocation) that allows for simpler and more transparent usage with more flexible control over session and security.'
				url 'https://bitbucket.org/robeden/intrepid'

				scm {
					connection 'scm:git:https://bitbucket.org/robeden/intrepid.git'
					developerConnection 'scm:git:https://bitbucket.org/robeden/intrepid.git'
					url 'https://bitbucket.org/robeden/intrepid/src'
				}

				licenses {
					license {
						name 'The Apache License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}

				developers {
					developer {
						id 'robeden'
						name 'Rob Eden'
						email 'robeden1@gmail.com'
					}
				}
			}
		}
	}
}
uploadArchives.dependsOn sourcesJar
uploadArchives.dependsOn javadocJar